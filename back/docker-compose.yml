version: "3.7"

services:
  postgresql:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${SQL_DB}
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./docker/postgres:/data/postgres
    ports:
      - "${SQL_PORT}:5432"
    restart: always

  redis:
    image: redis:6.2-alpine
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./docker/redis:/data
    restart: always

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    # A simpler healthcheck that just checks if the server is responsive
    healthcheck:
      test: |
        mongosh --quiet --eval 'db.adminCommand("ping")'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      # These variables enable authentication
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_NAME}
      
    ports:
      - "${MONGODB_PORT}:27017"
      
    volumes:
      # Mount the database data directory
      - ./docker/mongodb:/data/db
      # Mount the keyfile into the container
      - ./dockers/mongo-keyfile:/etc/mongo/mongo-keyfile
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo/mongo-keyfile"]
    restart: always